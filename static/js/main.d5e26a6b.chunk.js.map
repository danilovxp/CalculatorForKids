{"version":3,"sources":["components/Action/Action.jsx","components/Exercise/Exercise.jsx","components/Exercises/Exercises.jsx","components/Generator/Generator.jsx","App.js","index.js"],"names":["Action","props","useState","isChosen","setIsChosen","actionRef","useRef","Button","size","variant","onClick","onDelete","sign","onAdd","ref","Exercise","answerInputRef","answerStatus","setAnswerStatus","isDisabled","setDisabled","statuses","exercise","leftOperand","action","rightOperand","type","disabled","result","current","value","onCorrect","onError","Exercises","numberOfCorrect","setNumberOfCorrect","numberOfIncorrect","setNumberOfIncorrect","increaseCorrectAnswers","increaseIncorrectAnswers","exercises","length","map","index","key","onReset","Generator","minNumberRef","maxNumberRef","exercisesNumberRef","chosenActions","setChosenActions","setExercises","isInputsFilled","setInputsFilled","isSignsDisplayed","setSignsDisplayed","addAction","deleteAction","filter","chosenAction","checkInputs","Container","className","onChange","minNumber","maxNumber","exercisesNumber","i","Math","floor","random","round","push","addExercises","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5e26a6b.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { Button } from 'react-bootstrap'\n\nconst Action = (props) => {\n  const [isChosen, setIsChosen] = useState(false)\n  const actionRef = useRef(null)\n\n  const toggleChosen = () => {\n    setIsChosen(!isChosen)\n\n    !isChosen ? props.onAdd(props.sign) : props.onDelete(props.sign)\n  }\n\n  return (\n    <div>\n      <Button\n        size=\"lg\"\n        variant={`${isChosen ? 'warning' : 'outline-warning'}`}\n        onClick={toggleChosen}\n        ref={actionRef}\n      >\n        {props.sign}\n      </Button>\n    </div>\n  )\n}\n\nexport default Action\n","import React, { useRef, useState } from 'react'\n\nconst Exercise = (props) => {\n  const answerInputRef = useRef(null)\n  const [answerStatus, setAnswerStatus] = useState('')\n  const [isDisabled, setDisabled] = useState(false)\n  const statuses = ['Correct', 'Incorrect']\n\n  const checkAnswer = () => {\n    setDisabled(true)\n    let result\n    if (props.exercise.action === '+') {\n      result = props.exercise.leftOperand + props.exercise.rightOperand\n    } else if (props.exercise.action === '-') {\n      result = props.exercise.leftOperand - props.exercise.rightOperand\n    } else if (props.exercise.action === '*') {\n      result = props.exercise.leftOperand * props.exercise.rightOperand\n    } else {\n      result = props.exercise.leftOperand / props.exercise.rightOperand\n    }\n\n    let answer = +answerInputRef.current.value\n    if (answer === result) {\n      setAnswerStatus(statuses[0])\n      props.onCorrect()\n    } else {\n      setAnswerStatus(statuses[1])\n      props.onError()\n    }\n  }\n\n  return (\n    <div>\n      <span>{`${props.exercise.leftOperand} ${props.exercise.action} ${props.exercise.rightOperand}`}</span>\n      <span> = </span>\n      <input type=\"number\" ref={answerInputRef} disabled={isDisabled} />\n      <button onClick={checkAnswer} disabled={isDisabled}>\n        Answer\n      </button>\n      <span>{answerStatus}</span>\n    </div>\n  )\n}\n\nexport default Exercise\n","import React, { useState } from 'react'\nimport Exercise from '../Exercise/Exercise'\n\nconst Exercises = (props) => {\n  const [numberOfCorrect, setNumberOfCorrect] = useState(0)\n  const [numberOfIncorrect, setNumberOfIncorrect] = useState(0)\n\n  const increaseCorrectAnswers = () => {\n    setNumberOfCorrect(numberOfCorrect + 1)\n  }\n\n  const increaseIncorrectAnswers = () => {\n    setNumberOfIncorrect(numberOfIncorrect + 1)\n  }\n\n  return (\n    <div>\n      <div>\n        {!props.exercises.length\n          ? 'No exercises yet'\n          : props.exercises.map((exercise, index) => (\n              <Exercise\n                key={index}\n                exercise={exercise}\n                onError={increaseIncorrectAnswers}\n                onCorrect={increaseCorrectAnswers}\n              />\n            ))}\n      </div>\n      {props.exercises.length > 0 && <p>{`Correct:  ${numberOfCorrect}`}</p>}\n      {props.exercises.length > 0 && <p>{`Incorrect: ${numberOfIncorrect}`}</p>}\n      {props.exercises.length > 0 &&\n        props.exercises.length === numberOfIncorrect + numberOfCorrect && (\n          <div>\n            <p>{numberOfCorrect > numberOfIncorrect ? 'You win' : 'You lose'}</p>\n            <button onClick={props.onReset}>Reset</button>\n          </div>\n        )}\n    </div>\n  )\n}\n\nexport default Exercises\n","import React, { useRef, useState } from 'react'\nimport { Container } from 'react-bootstrap'\nimport Action from '../Action/Action'\nimport Exercises from '../Exercises/Exercises'\n\nconst Generator = () => {\n  const minNumberRef = useRef(null)\n  const maxNumberRef = useRef(null)\n  const exercisesNumberRef = useRef(null)\n  const [chosenActions, setChosenActions] = useState([])\n  const [exercises, setExercises] = useState([])\n  const [isInputsFilled, setInputsFilled] = useState(false)\n  const [isSignsDisplayed, setSignsDisplayed] = useState(true)\n\n  const signs = ['+', '-', '*', '/']\n\n  const resetExercises = () => {\n    setSignsDisplayed(true)\n  }\n\n  const addAction = (action) => {\n    setChosenActions([...chosenActions, action])\n  }\n\n  const deleteAction = (action) => {\n    setChosenActions(chosenActions.filter((chosenAction) => chosenAction !== action))\n  }\n\n  const addExercises = (exercises) => {\n    setExercises(exercises)\n  }\n\n  const generateExercises = () => {\n    const minNumber = +minNumberRef.current.value\n    const maxNumber = +maxNumberRef.current.value\n    const exercisesNumber = +exercisesNumberRef.current.value\n    const exercises = []\n    for (let i = 0; i < exercisesNumber; i++) {\n      const action = chosenActions[Math.floor(Math.random() * chosenActions.length)]\n      let leftOperand = Math.round(Math.random() * (maxNumber - minNumber) + minNumber)\n      let rightOperand = Math.round(Math.random() * (maxNumber - minNumber) + minNumber)\n      if (leftOperand < rightOperand) {\n        ;[leftOperand, rightOperand] = [rightOperand, leftOperand]\n      }\n      exercises.push({ action, leftOperand, rightOperand })\n    }\n    addExercises(exercises)\n    minNumberRef.current.value = ''\n    maxNumberRef.current.value = ''\n    exercisesNumberRef.current.value = ''\n    setChosenActions([])\n    setSignsDisplayed(false)\n  }\n\n  const checkInputs = () => {\n    setInputsFilled(\n      exercisesNumberRef.current.value.length > 0 &&\n        minNumberRef.current.value.length > 0 &&\n        maxNumberRef.current.value.length > 0,\n    )\n  }\n\n  return (\n    <Container>\n      {isSignsDisplayed ? (\n        <div>\n          <div className=\"action-wrapper\">\n            {signs.map((sign, index) => (\n              <Action key={index} sign={sign} onDelete={deleteAction} onAdd={addAction} />\n            ))}\n          </div>\n          <div className=\"input-form\">\n            <span>Choose a number from</span> <input type=\"number\" ref={minNumberRef} onChange={checkInputs} />\n            <span>to</span>\n            <input type=\"number\" ref={maxNumberRef} onChange={checkInputs} />\n          </div>\n          <div className=\"exercises-number-field\">\n            <span>Choose a number of exercises:</span> \n            <input type=\"number\" ref={exercisesNumberRef} onChange={checkInputs} />\n          </div>\n          <div className=\"btn-generate\">\n            <button\n              onClick={generateExercises}\n              disabled={chosenActions.length === 0 || !isInputsFilled}\n            >\n              Generate\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"exercises-wrapper\">\n          <Exercises exercises={exercises} onReset={resetExercises} />\n        </div>\n      )}\n    </Container>\n  )\n}\n\nexport default Generator\n","import React from 'react'\nimport { Container } from 'react-bootstrap'\nimport './App.scss'\nimport Generator from './components/Generator/Generator'\n\nconst App = () => {\n  return (\n    <Container className=\"main-wrapper\">\n      <Generator />\n    </Container>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App'\nimport './App.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}